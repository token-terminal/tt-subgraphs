type PairCreatedV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  token0: Bytes!
  token1: Bytes!
  pair: Bytes! #address
}
type MintV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  sender: Bytes! #address
  amount0: BigInt!
  amount1: BigInt!
}
type BurnV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  sender: Bytes!
  amount0: BigInt!
  amount1: BigInt!
  to: Bytes! #address
}
type SwapV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  sender: Bytes!
  amount0In: BigInt!
  amount1In: BigInt!
  amount0Out: BigInt!
  amount1Out: BigInt!
  to: Bytes! #address
}
type ApprovalV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  owner: Bytes!
  spender: Bytes!
  value: BigInt!
}
type TransferV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  from: Bytes!
  to: Bytes!
  amount: BigInt!
}
type SyncV0Event @entity {
  id: ID!
  transactionHash: Bytes!
  contractAddress: Bytes!
  blockNumber: BigInt!
  blockTime: BigInt!
  logIndex: BigInt!
  reserve0: BigInt!
  reserve1: BigInt!
}
