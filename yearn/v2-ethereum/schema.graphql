type Vault @entity {
  # Vault address.
  id: ID!
  # Vault's name.
  name: String!
  # Vault's symbol.
  symbol: String!
  # Total yield generated by all strategies.
  totalYieldGenerated: BigDecimal!
  # Total management and performance fees generated.
  totalProtocolFeesGenerated: BigDecimal!
  # Total performance fees generated.
  totalVaultPerformanceFeesGenerated: BigDecimal!
  # Total management fees generated.
  totalManagementFeesGenerated: BigDecimal!
  # Total strategist fees generated.
  totalStrategistPerformanceFeesGenerated: BigDecimal!
  # Total assets under control whether supplied or given as a debt to a strategy, denominated in base token.
  totalAssets: BigDecimal!
  # Total debt to strategies, denominated in base token.
  totalDebt: BigDecimal!
  # Ratio between underlying token and Vault's share token.
  pricePerShare: BigDecimal!
  # The token that accrues value.
  denomination: Token!
}

type Strategy @entity {
  # Strategy address.
  id: ID!
  vault: Vault!
}

type Token @entity {
  id: ID!
  address: Bytes!
  name: String!
  symbol: String!
  decimals: Int!
  totalSupply: BigInt!
}

type NewVaultEvent @entity {
  id: ID!
  timestamp: Int!
  apiVersion: String!
  deploymentId: BigInt!
  token: Bytes!
  vault: Bytes!
}

type NewExperimentalVaultEvent @entity {
  id: ID!
  timestamp: Int!
  apiVersion: String!
  deployer: Bytes!
  token: Bytes!
  vault: Bytes!
}

type StrategyAddedEvent @entity {
  id: ID!
  timestamp: Int!
  debtRatio: BigInt!
  maxDebtPerHarvest: BigInt!
  minDebtPerHarvest: BigInt!
  performanceFee: BigInt!
  strategyAddress: Bytes!
}

type StrategyAdded_v0_3_0_v0_3_1Event @entity {
  id: ID!
  timestamp: Int!
  debtLimit: BigInt!
  rateLimit: BigInt!
  performanceFee: BigInt!
  strategyAddress: Bytes!
}

type StrategyReportedEvent @entity {
  id: ID!
  timestamp: Int!
  debtAdded: BigInt!
  gain: BigInt!
  loss: BigInt!
  strategy: Bytes!
  totalDebt: BigInt!
  totalGain: BigInt!
  totalLoss: BigInt!
}

type StrategyReported_v0_3_0_v0_3_1Event @entity {
  id: ID!
  timestamp: Int!
  debtAdded: BigInt!
  debtLimit: BigInt!
  gain: BigInt!
  loss: BigInt!
  strategy: Bytes!
  totalDebt: BigInt!
  totalGain: BigInt!
  totalLoss: BigInt!
}

type TransferEvent @entity {
  id: ID!
  timestamp: Int!
  sender: Bytes!
  receiver: Bytes!
  amount: BigInt!
}
